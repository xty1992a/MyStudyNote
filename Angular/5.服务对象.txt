服务

	服务即controller函数依赖对象;如$scope,$rootScope,$timeout,$interval,$filter等
	使用时不检查顺序,只检查名称
		*注意,生产模式时以数组传入的方式需要注意顺序
		['$scope','$filter', function($scope, $filter){}];
		
		- 内置服务对象;
		  * $rootScope与 $scope
		  * $filter		
		  * $http		
		  * $timeout与$interval	
			- 脏数据检查:
				什么时候会进行脏数据检查？由angular定义的回调函数执行完会自动进行脏数据检查，有数据发生改变时页面就随之更新
				什么时候不会进行脏数据检查？ 由非angular定义的回调函数（原生js中的回调函数。。）就不会进行脏数据检查，就算数据发生改变，页面也不会同步更新
				因此原生的setinterval无法直接对页面数据进行更新;
				$timeout(function(){},timeleter);	只是对原生函数的包装,用法完全一致
				
		- 自定义服务对象;
			模块可以自定义服务对象,为controller()提供依赖对象
			
		//	- 方法一:factory('serviceName', factory)			//工厂函数,可以返回一个任意值,包括对象或者函数,对象上可以封装方法;
				angular.module('myApp', [])
					.factory('personStorage', function(){
						retrun {				//返回一个对象
							save:function(key,data){
								sessionStorage.setItem(key, JSON.stringfy(data));
							},
							read:function(key){
								retrun JSON.parse(sessionStorage.getItem(key));						
							}
						}
					})
					
		//	- 方法一:service('serviceName', constructor)		//构造函数,返回一个实例对象
					.service('personStorage1', function(){
							this.save = function(key,data){			//返回一个实例对象,使用this绑定方法
								sessionStorage.setItem(key, JSON.stringfy(data));
							};
							this.read = function(key){
								retrun JSON.parse(sessionStorage.getItem(key));						
							};
					})
			
					.controller('Ctrl', function($scope, personStorage, personStorage1){})//将自定义服务对象名传入
			
		
		