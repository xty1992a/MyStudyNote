数据类型
	字面量有多种类型
	-可以使用typeof检查数据类型
					var a = "字面量";
					console.log(typeof a);
				 控制台返回a的数据类型;
	 
	5种基本数据类型
		-String(字符串)
			即字符串,必须加引号,
		-Number(数值)
			包括所有数字以及NaN(非数字)和infinity(正无穷,JS中最大的数值,负值是最小的数值).
							*注意,JS中整数的运算基本精确,但是小数不是很精确,底层使用二进制,无法表示1/10.
		-Boolean(布尔值)
			布尔值只有两个值,真true和假false.
		-Undefined(未定义)
			只有一个值,undefined,
			用来表示已声明但未赋值的变量.
	1种引用数据类型
		-Null(空值)
			空值只有一个值,null,表示一个空的对象,但它并不是对象,它表示空本身.
			 所以使用typeof检查会返回object.
			 
			 
--------------------------------


类型转换
	数据类型可以互相转换.
	
	数据转换推荐使用隐式转换,它们的底层实际上都是调用了对应函数,但是使用较为方便.	
	
	-转换为String
		1.调用toString()方法,如:
			a=a.toString();
			
			该方法不能用于Null和Undefined
			同时,它不会改变原变量,而是将转换后的结果返回,所以在此将其赋值给a.
			*调用Number的tostring()方法时,向()传递一个进制值,可以将该数值转换为指定进制的值.
			
		2.使用String()函数,如:
			a=String(a);
			
			与toString()基本一致,同时,能够将Null和Undefined直接转换为"null"和"undefined"
			
		3.使用+""的形式,如:																				(推荐使用)
			如:
			a = a + "";
			任何值与字符串相加都将转换为字符串,然后拼串,包括空串"".
			
	-转换为Number
		
			不同的数据类型转换方式不同
			-字符串:
				纯数字字符串		转换为数字.
				包含非数字的		转换为NaN.
			-布尔值
					true	     	转换为1.
					false     		转换为0.
			-空值   null			转换为0.
			-未定义 undefined		转换为NaN.
			
		1.使用Number()函数
			a=Number(a);
			
		2.使用parseInt()或parseFloat()
			-适用于将以数字开头的字符串转换为Number,只返回字符串的数字部分.可用于返回带单位的属性值,如10px等.
			机制:
			从左往右解析字符串,遇到非数字停止解析,只返回数值.
						*注意,不同的浏览器解析方式不同,ES3版本的浏览器使用8进制,ES5使用10进制,可以在()指定第二个参数,说明数字进制.例如:parseInt(a , 10);
			
			-parseInt()    			只能转换以数字开头的字符串的整数部分.
				a = parseInt(a);
			-parseFloat() 			只能转换以数字开头的字符串的数字部分,包括小数.
				a = parseFloat(a);
			
		3.使用+号进行转换,例如:																				(推荐使用)
			a = +a;
	-转换为Boolean
		
			不同的数据类型转换方式不同
				-字符串
					空串			转换为false
					否则			转换为true
				-数字
					0和NaN			转换为false
					否则			转换为true
				-Null和Undefined	转换为false
				-对象				转换为true
		
		1.使用Boolean()函数,如:
			a = Boolean(a);
			
		2.使用!!运算符,如:																					(推荐使用)
			a = !!a;

	
	