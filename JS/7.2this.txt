
	解析器(浏览器)在调用函数每次都会向函数内部传递进一个隐含的参数,
	这个隐含的参数就是this，this指向的是一个对象，
	这个对象我们称为函数执行的 上下文对象，
	根据函数的调用方式的不同，this会指向不同的对象
		1.以函数的形式调用时，this永远都是window
		2.以方法的形式调用时，this就是调用方法的那个对象
		
	this指明了调用了方法的具体对象,告诉了我们是谁调用了这个方法.
	-函数就是window的方法. 
	
	var声明可以视作一个锚点,将它后面的变量与当前作用域绑定一起,页面中没有var的变量默认是全局作用域的变量.
	-var声明可以使后面的变量在其他代码执行之前就提前初始化,赋值为Undefined,因此,在var过的变量之前就调用该变量不会报错,而是返回Undefined.
	
	函数声明形式创建的函数:function 函数(){} ,如果使用var,将会提前创建.
	函数表达式创建的函数:fun = function(){} 即使使用了var,也不会被提前.